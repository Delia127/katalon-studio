package com.kms.katalon.composer.testsuite.collection.handler;

import javax.annotation.PostConstruct;
import javax.inject.Inject;

import org.eclipse.e4.core.di.annotations.Optional;
import org.eclipse.e4.ui.di.UIEventTopic;
import org.eclipse.jface.dialogs.MessageDialog;
import org.osgi.framework.FrameworkUtil;

import com.kms.katalon.composer.components.impl.constants.StringConstants;
import com.kms.katalon.composer.components.impl.handler.OpenFileEntityHandler;
import com.kms.katalon.composer.components.impl.util.EntityPartUtil;
import com.kms.katalon.composer.testsuite.collection.constant.ComposerTestsuiteCollectionMessageConstants;
import com.kms.katalon.composer.testsuite.collection.constant.ImageConstants;
import com.kms.katalon.composer.testsuite.collection.part.TestSuiteCollectionPart;
import com.kms.katalon.constants.EventConstants;
import com.kms.katalon.controller.ProjectController;
import com.kms.katalon.controller.TestSuiteCollectionController;
import com.kms.katalon.dal.exception.DALException;
import com.kms.katalon.entity.testsuite.TestSuiteCollectionEntity;

public class OpenTestSuiteCollectionHandler extends OpenFileEntityHandler<TestSuiteCollectionEntity> {
    private static final String TEST_SUITE_COLLECTION_BUNDLE_URI = "bundleclass://"
            + FrameworkUtil.getBundle(OpenTestSuiteCollectionHandler.class).getSymbolicName() + "/";

    private static final String TEST_SUITE_COLLECTION_PART_URI = TEST_SUITE_COLLECTION_BUNDLE_URI + TestSuiteCollectionPart.class.getName();

    @PostConstruct
    @Override
    protected void initialize() {
        super.initialize();
    }

    @Override
    public String getContributionURI() {
        return TEST_SUITE_COLLECTION_PART_URI;
    }

    @Override
    public String getIconURI() {
        return ImageConstants.URL_16_TEST_SUITE_COLLECTION;
    }

    @Override
    public String getPartId(TestSuiteCollectionEntity fileEntity) {
        return EntityPartUtil.getTestSuiteCollectionPartId(fileEntity.getId());
    }

    @Override
    protected Class<? extends TestSuiteCollectionEntity> getEntityType() {
        return TestSuiteCollectionEntity.class;
    }

    @Inject
    @Optional
    private void execute(@UIEventTopic(EventConstants.TEST_SUITE_COLLECTION_OPEN) Object eventData) {
        if (ProjectController.getInstance().getCurrentProject() == null) {
            return;
        }

        if (!(eventData instanceof String)) {
            return;
        }
        try {
            execute(TestSuiteCollectionController.getInstance().getTestRunByDisplayId((String) eventData));
        } catch (DALException e) {
            MessageDialog.openError(null, StringConstants.WARN,
                    ComposerTestsuiteCollectionMessageConstants.HAND_UNDABLE_TO_OPEN_TEST_SUITE_COLLECTION);
        }
    }

}
