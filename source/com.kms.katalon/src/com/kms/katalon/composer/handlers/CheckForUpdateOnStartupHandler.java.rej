diff a/source/com.kms.katalon/src/com/kms/katalon/composer/handlers/CheckForUpdateOnStartupHandler.java b/source/com.kms.katalon/src/com/kms/katalon/composer/handlers/CheckForUpdateOnStartupHandler.java	(rejected hunks)
@@ -11,7 +11,9 @@
 import com.kms.katalon.constants.EventConstants;
 import com.kms.katalon.constants.IdConstants;
 import com.kms.katalon.constants.PreferenceConstants;
+import com.kms.katalon.controller.ProjectController;
 import com.kms.katalon.preferences.internal.PreferenceStoreManager;
+import com.kms.katalon.tracking.service.Trackings;
 
 public class CheckForUpdateOnStartupHandler extends CheckForUpdatesHandler {
     
@@ -33,9 +35,26 @@
         IPreferenceStore prefStore = PreferenceStoreManager.getPreferenceStore(IdConstants.KATALON_GENERAL_BUNDLE_ID);
         boolean checkNewVersion = prefStore.contains(PreferenceConstants.GENERAL_AUTO_CHECK_NEW_VERSION)
                 ? prefStore.getBoolean(PreferenceConstants.GENERAL_AUTO_CHECK_NEW_VERSION) : true;
+
+        boolean checkAllowUsage = prefStore.contains(PreferenceConstants.GENERAL_AUTO_CHECKL_ALLOW_USAGE_TRACKING)
+                ? prefStore.getBoolean(PreferenceConstants.GENERAL_AUTO_CHECKL_ALLOW_USAGE_TRACKING) : true;
         if (!checkNewVersion) {
             return;
         }
-        checkForUpdate(true);
+        else{
+            checkForUpdate(true);
+        }
+        if(!checkAllowUsage) {
+            return;
+        }
+        else{
+            trackingAllowUsage();
+        }
+
+    }
+
+    private void trackingAllowUsage() {
+        Trackings.trackOpenProject(ProjectController.getInstance().getCurrentProject());
+        
     }
 }
