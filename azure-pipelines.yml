# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
      # - staging-*
      - release-*

# pr:
# - staging-*
# - release-*

pr: none

jobs:
- job: Build
  timeoutInMinutes: 360

  variables:
    BRANCH: $(Build.SourceBranchName)
    COMMIT_ID: $(Build.SourceVersion)
    PR_SOURCE_BRANCH: $(System.PullRequest.SourceBranch)
    # COMMIT_ID: $(System.PullRequest.SourceCommitId)
    KATALON_DIR: $(Build.Repository.LocalPath)
    TMP_DIR: $(Build.ArtifactStagingDirectory)
    MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
    MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
    VERSION: 
    TAG:
    S3_LOCATION:
    WITH_UPDATE:
    IS_RELEASE:

  pool:
    vmImage: 'macOS-latest'

  steps:

  # - task: InstallAppleCertificate@2
  #   inputs:
  #     certSecureFile: 'KatalonAppleCert.p12'
  #     certPwd: '$(CER_PASSWORD)'
  #     keychain: 'temp'

  # - bash: |
  #     brew install awscli
  #     aws --version
  #     aws configure set default.s3.use_accelerate_endpoint true
  #   displayName: Install AWS CLI
  # - checkout: self
  #   fetchDepth: 1
  #   clean: true

  # - task: Cache@2
  #   inputs:
  #     key: 'maven | "$(Agent.OS)" | **/pom.xml, !**/target/**'
  #     restoreKeys: |
  #       maven | "$(Agent.OS)"
  #       maven
  #     path: $(MAVEN_CACHE_FOLDER)
  #   displayName: Cache Maven Local Repo

  # - bash: |
  #     ./build.sh "${BRANCH}" "${TMP_DIR}" "${KATALON_DIR}" "${MAVEN_OPTS}" "${COMMIT_ID}"
  #   displayName: Build
  # - bash: |
  #     source ./variable.sh
  #     echo "##vso[task.setvariable variable=VERSION]${version}"
  #     echo "##vso[task.setvariable variable=TAG]${tag}"
  #     echo "##vso[task.setvariable variable=S3_LOCATION]${s3Location}"
  #     echo "##vso[task.setvariable variable=WITH_UPDATE]${withUpdate}"
  #     echo "##vso[task.setvariable variable=IS_RELEASE]${isRelease}"
  #   displayName: Azure Populate Variable Value
  # # - task: S3Upload@1
  # #   inputs:
  # #     awsCredentials: 'aws'
  # #     regionName: 'us-east-1'
  # #     bucketName: 'katalon'
  # #     sourceFolder: '$(TMP_DIR)/update/$(TAG)'
  # #     globExpressions: '**'
  # #     targetFolder: 'update/$(TAG)'
  # #     filesAcl: 'public-read'
  # #   displayName: Upload Update Package
  # #   condition: eq(variables.WITH_UPDATE, 'true')

  # - task: AWSCLI@1
  #   inputs:
  #     awsCredentials: 'aws'
  #     regionName: 'us-east-1'
  #     awsCommand: 's3'
  #     awsSubCommand: 'cp'
  #     awsArguments: '$(TMP_DIR)/update/$(TAG)/ s3://katalon/update/$(TAG) --recursive --acl public-read'
  #   displayName: Upload Update Package
  #   condition: eq(variables.IS_RELEASE, 'true')

  # - bash: |
  #     rm -rf $(TMP_DIR)/update/$(TAG)
  #   displayName: Delete Update Packages
  # # - task: S3Upload@1
  # #   inputs:
  # #     awsCredentials: 'aws'
  # #     regionName: 'us-east-1'
  # #     bucketName: 'katalon'
  # #     sourceFolder: '$(TMP_DIR)'
  # #     globExpressions: '**'
  # #     targetFolder: '$(S3_LOCATION)'
  # #     filesAcl: 'public-read'
  # #   displayName: Upload Build Package
  # #   condition: eq(variables.IS_RELEASE, 'true')

  # - task: AWSCLI@1
  #   inputs:
  #     awsCredentials: 'aws'
  #     regionName: 'us-east-1'
  #     awsCommand: 's3'
  #     awsSubCommand: 'cp'
  #     awsArguments: '$(TMP_DIR)/ s3://katalon/$(S3_LOCATION) --recursive --acl public-read'
  #   displayName: Upload Build Package
  #   condition: eq(variables.IS_RELEASE, 'true')

  # # - task: S3Upload@1
  # #   inputs:
  # #     awsCredentials: 'aws'
  # #     regionName: 'us-east-1'
  # #     bucketName: 'katalon'
  # #     sourceFolder: '$(TMP_DIR)'
  # #     globExpressions: '**'
  # #     targetFolder: 'azure-$(BRANCH)-$(PR_SOURCE_BRANCH)-$(COMMIT_ID)'
  # #     filesAcl: 'public-read'
  # #   displayName: Upload Build Package
  # #   condition: eq(variables.IS_RELEASE, 'false')

  # - task: AWSCLI@1
  #   inputs:
  #     awsCredentials: 'aws'
  #     regionName: 'us-east-1'
  #     awsCommand: 'cloudfront'
  #     awsSubCommand: 'create-invalidation'
  #     awsArguments: '--distribution-id E1S9HCHW5N31CV --paths "/$(TAG)/*"'
  #   displayName: Invalidate CloudFront
  #   condition: eq(variables.IS_RELEASE, 'true')

  # - task: GitHubRelease@0
  #   inputs:
  #     gitHubConnection: 'github.com/katalon-studio'
  #     repositoryName: 'katalon-studio/katalon-studio'
  #     action: 'edit'
  #     target: 'master'
  #     tagSource: 'manual'
  #     tag: 'v$(TAG)'
  #     title: 'v$(TAG)'
  #     assets: '$(TMP_DIR)/*'
  #     isDraft: true
  #     addChangeLog: false
  #   displayName: Create Github Release
  #   condition: eq(variables.IS_RELEASE, 'true')
    
  - task: DownloadGitHubRelease@0
    inputs:
      connection: 'github.com_huynguyen2908'
      userRepository: 'katalon-studio/katalon-studio'
      defaultVersionType: 'specificVersion'
      version: 'v7.2.4'
      itemPattern: 'Katalon_Studio_Engine_MacOS*'
      downloadPath: '$(System.ArtifactsDirectory)'

    # - task: DownloadGitHubRelease@0
    #   inputs:
    #     connection: 'github.com_huynguyen2908'
    #     userRepository: 'katalon-studio/katalon-studio'
    #     defaultVersionType: 'specificVersion'
    #     version: '22464759'
    #     downloadPath: '$(System.ArtifactsDirectory)'
      
  # - bash: |
  #     ./tools/web-test/execute.sh "${KATALON_DIR}" "${KATALON_DIR}" "${VERSION}"
  #   displayName: Execute WebUI keywords test

  # - task: PublishBuildArtifacts@1
  #   inputs:
  #     PathtoPublish: '$(TMP_DIR)'
  #     ArtifactName: 'katalon-build'
  #     publishLocation: 'Container'
  #   displayName: Collect Artifacts